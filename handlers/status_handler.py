# handlers/status_handler.py
from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from database.db import get_user_orders, update_order_status

router = Router()

@router.message(F.text == "/status")
async def show_orders_for_status(message: Message):
    orders = await get_user_orders(message.from_user.id)
    if not orders:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.")
        return

    await message.answer("üîÑ –í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–∫–∞–∑ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:")
    for order in orders:
        status = order.get("status", "–í —Ä–∞–±–æ—Ç–µ")
        # –ö–Ω–æ–ø–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å "–í —Ä–∞–±–æ—Ç–µ"
        if status == "–í —Ä–∞–±–æ—Ç–µ":
            kb = InlineKeyboardMarkup(inline_keyboard=[
                [
                    InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data=f"status_{order['id']}_–ì–æ—Ç–æ–≤–æ"),
                    InlineKeyboardButton(text="üóë –£—Ç–∏–ª—å", callback_data=f"status_{order['id']}_–£—Ç–∏–ª—å")
                ]
            ])
        else:
            kb = None  # –ï—Å–ª–∏ —É–∂–µ "–ì–æ—Ç–æ–≤–æ" –∏–ª–∏ "–£—Ç–∏–ª—å" ‚Äî –∫–Ω–æ–ø–æ–∫ –Ω–µ—Ç

        caption = (
            f"üîπ –ù–æ–º–µ—Ä: {order['tire_number']}\n"
            f"üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {order['name']}\n"
            f"üìè –†–∞–∑–º–µ—Ä: {order['size']}\n"
            f"üë§ –ö–ª–∏–µ–Ω—Ç: {order['client']}\n"
            f"üîß –†–∞–±–æ—Ç–∞: {order['work']}\n"
            f"üè∑ –°—Ç–∞—Ç—É—Å: {status}"
        )

        if order.get("file_id"):
            await message.answer_photo(photo=order["file_id"], caption=caption, reply_markup=kb)
        else:
            await message.answer(caption, reply_markup=kb)

@router.callback_query(F.data.startswith("status_"))
async def change_status(callback: CallbackQuery):
    try:
        _, order_id, new_status = callback.data.split("_")
        order_id = int(order_id)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î
        await update_order_status(order_id, new_status)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –ø–æ–¥ —Ñ–æ—Ç–æ
        old_caption = callback.message.caption
        if old_caption:
            new_caption = "\n".join(
                line if not line.startswith("üè∑ –°—Ç–∞—Ç—É—Å:") else f"üè∑ –°—Ç–∞—Ç—É—Å: {new_status}"
                for line in old_caption.split("\n")
            )
            await callback.message.edit_caption(caption=new_caption)
        
        await callback.answer(f"‚úÖ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: {new_status}")
    except Exception as e:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞", show_alert=True)
