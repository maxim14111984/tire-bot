import os
import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from config import BOT_TOKEN, ADMIN_IDS
from database.db import init_db
from handlers.client_handler import router as client_router

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def run_bot():
    bot = Bot(token=BOT_TOKEN)
    storage = MemoryStorage()
    dp = Dispatcher(storage=storage)
    dp.include_router(client_router)

    @dp.message(lambda msg: msg.text and msg.text == "/start")
    async def cmd_start(message):
        await message.answer(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
            "üìå –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:\n"
            "1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —à–∏–Ω—ã —Å –ø–æ–¥–ø–∏—Å—å—é (–Ω–æ–º–µ—Ä)\n"
            "2. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º\n\n"
            "üîç –ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞: /client <–Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω>"
        )

    await init_db()
    await bot.delete_webhook(drop_pending_updates=True)
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(run_bot())
