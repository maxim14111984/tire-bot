# handlers/form_handler.py
from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from database.db import save_order

router = Router()

class TireForm(StatesGroup):
    waiting_for_name = State()
    waiting_for_size = State()
    waiting_for_client = State()
    waiting_for_work = State()

@router.message(F.photo)
async def handle_photo(message: Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ç–æ –∏ –Ω–æ–º–µ—Ä —à–∏–Ω—ã (–∏–∑ –ø–æ–¥–ø–∏—Å–∏)
    photo = message.photo[-1]
    file_id = photo.file_id
    tire_number = message.caption.strip() if message.caption else "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (FSM)
    await state.update_data(
        file_id=file_id,
        tire_number=tire_number,
        user_id=message.from_user.id
    )
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
    await message.answer("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∏–Ω—ã (–º–∞—Ä–∫—É):")
    await state.set_state(TireForm.waiting_for_name)

@router.message(TireForm.waiting_for_name)
async def process_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text.strip())
    await message.answer("üìè –í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —à–∏–Ω—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, 205/55 R16):")
    await state.set_state(TireForm.waiting_for_size)

@router.message(TireForm.waiting_for_size)
async def process_size(message: Message, state: FSMContext):
    await state.update_data(size=message.text.strip())
    await message.answer("üë§ –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ (–∏–º—è –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω):")
    await state.set_state(TireForm.waiting_for_client)

@router.message(TireForm.waiting_for_client)
async def process_client(message: Message, state: FSMContext):
    await state.update_data(client=message.text.strip())
    await message.answer("üîß –û–ø–∏—à–∏—Ç–µ —Ä–∞–±–æ—Ç—É (—Ä–µ–º–æ–Ω—Ç, –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞, –∑–∞–º–µ–Ω–∞ –∏ —Ç.–¥.):")
    await state.set_state(TireForm.waiting_for_work)

@router.message(TireForm.waiting_for_work)
async def process_work(message: Message, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    data = await state.get_data()
    data["work"] = message.text.strip()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await save_order(
        user_id=data["user_id"],
        tire_number=data["tire_number"],
        file_id=data["file_id"],
        name=data["name"],
        size=data["size"],
        client=data["client"],
        work=data["work"]
    )
    
    await message.answer("‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω! –°—Ç–∞—Ç—É—Å: **–í —Ä–∞–±–æ—Ç–µ**", parse_mode="Markdown")
    await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
